From 0aafe3199518d2dc35e47044bd5582051311c0ef Mon Sep 17 00:00:00 2001
From: Emmanuele Bassi <ebassi@gnome.org>
Date: Fri, 22 Jul 2016 15:46:09 +0100
Subject: [PATCH] Allow null log domains

The old logging API allows NULL log domains, so we need to code
defensively against the case before calling the new structured
logging API.

https://bugzilla.gnome.org/show_bug.cgi?id=744456
---
 glib/gmessages.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/glib/gmessages.c b/glib/gmessages.c
index 6223b9c..007793a 100644
--- a/glib/gmessages.c
+++ b/glib/gmessages.c
@@ -2405,16 +2405,22 @@ g_log_default_handler (const gchar   *log_domain,
   fields[2].value = log_level_to_priority (log_level);
   fields[2].length = 1;
 
-  fields[3].key = "GLIB_DOMAIN";
-  fields[3].value = log_domain;
-  fields[3].length = -1;
+  /* The log domain is not strictly required by the old API */
+  if (log_domain != NULL)
+    {
+      fields[3].key = "GLIB_DOMAIN";
+      fields[3].value = log_domain;
+      fields[3].length = -1;
+    }
 
   /* Print out via the structured log API, but drop any fatal flags since we
    * have already handled them. The fatal handling in the structured logging
    * API is more coarse-grained than in the old g_log() API, so we don't want
    * to use it here.
    */
-  g_log_structured_array (log_level & ~G_LOG_FLAG_FATAL, fields, 4);
+  g_log_structured_array (log_level & ~G_LOG_FLAG_FATAL,
+                          fields,
+                          log_domain != NULL ? 4 : 3);
 }
 
 /**
-- 
2.7.4